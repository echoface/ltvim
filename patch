diff --git a/nvim/lua/autocmds.lua b/nvim/lua/autocmds.lua
index cb7bd06..ab5f988 100644
--- a/nvim/lua/autocmds.lua
+++ b/nvim/lua/autocmds.lua
@@ -19,7 +19,15 @@ vim.api.nvim_create_autocmd({ "FileType" }, {
 -- close quickfix menu after selecting choice
 vim.api.nvim_create_autocmd({ "FileType" }, {
     pattern = { "qf", "quickfix" },
-    command = [[nnoremap <buffer> <CR> <CR>:cclose<CR>]]
+    command = [[
+        nnoremap <buffer> <CR> <CR><C-W>p
+        nnoremap <silent> <buffer> o <CR><C-w>p
+        nnoremap <buffer> k <Up><CR><C-w>p
+        nnoremap <buffer> j <Down><CR><C-w>p
+        nnoremap <buffer> <Up> <Up><CR><C-w>p
+        nnoremap <buffer> <Down> <Down><CR><C-w>p
+    ]],
+    -- command = [[nnoremap <buffer> <CR> <CR>:cclose<CR>]]
 })
 
 -- Set wrap and spell in markdown and gitcommit
diff --git a/nvim/lua/config/lsp/settings/gopls.lua b/nvim/lua/config/lsp/settings/gopls.lua
index 7962b24..c4b3149 100644
--- a/nvim/lua/config/lsp/settings/gopls.lua
+++ b/nvim/lua/config/lsp/settings/gopls.lua
@@ -8,40 +8,21 @@
 --- "source"                    # Source
 --- "source.fixAll"             # SourceFixAll
 --- "source.organizeImports"    # SourceOrganizeImports
-local function run_specific_code_action(action_kind, filter_func)
+local function run_specific_code_action(action_kind)
     local opts = {
         apply = true,
         context = {
             only = { action_kind }
         },
     }
-    if filter_func then
-        opts.filter = filter_func
-    end
     vim.lsp.buf.code_action(opts)
 end
 
-local organize_imports_sync = function(bufnr, isPreflight)
-    local encoding = vim.lsp.util._get_offset_encoding()
-    local params = vim.lsp.util.make_range_params(nil, encoding)
-    params.context = { only = { "source.organizeImports" } }
-
-    if isPreflight then
-        vim.lsp.buf_request(bufnr, "textDocument/codeAction", params, function() end)
-        return
-    end
-
-    local result = vim.lsp.buf_request_sync(bufnr, "textDocument/codeAction", params, 3000)
-    for _, res in pairs(result or {}) do
-        for _, r in pairs(res.result or {}) do
-            if r.edit then
-                vim.lsp.util.apply_workspace_edit(r.edit, encoding)
-            else
-                vim.lsp.buf.execute_command(r.command)
-            end
-        end
-    end
-end
+vim.api.nvim_create_autocmd("BufWritePre", {
+    callback = function()
+        vim.lsp.buf.format({ async = true })
+    end,
+})
 
 
 M = {}
@@ -61,11 +42,6 @@ M.on_attach = function(client, bufnr)
     local opts = { noremap = true, silent = true }
     local keymap = vim.api.nvim_buf_set_keymap
 
-    vim.api.nvim_create_autocmd("BufWritePre", {
-      callback = function()
-         vim.lsp.buf.format({async = false})
-      end,
-    })
     vim.api.nvim_buf_create_user_command(bufnr, "GoImports", function()
         run_specific_code_action("source.organizeImports", nil)
     end, {})
diff --git a/nvim/lua/config/nvimcmp.lua b/nvim/lua/config/nvimcmp.lua
index 771ce4f..c9abec2 100644
--- a/nvim/lua/config/nvimcmp.lua
+++ b/nvim/lua/config/nvimcmp.lua
@@ -85,6 +85,7 @@ cmp.setup({
         end, { "i", "s" }),
     }),
     sources = {
+        { name = "codeverse" },
         { name = "nvim_lsp" },
         -- { name = "nvim_lsp_signature_help" },
         { name = "nvim_lua" },
diff --git a/nvim/lua/config/telescope.lua b/nvim/lua/config/telescope.lua
index 74c7700..d2db0c7 100644
--- a/nvim/lua/config/telescope.lua
+++ b/nvim/lua/config/telescope.lua
@@ -5,14 +5,14 @@ telescope.setup({
         -- theme = "center",
         -- layout_strategy = "horizontal", -- bottom_pane|horizontal|vertical|cursor|cneter
         -- sorting_strategy = "ascending",
-        -- layout_config = {
-        --     width = 0.95,
-        --     height = 0.95,
-        --     horizontal = {
-        --         preview_width = 0.65,
-        --         prompt_position = "top",
-        --     },
-        -- },
+        layout_config = {
+            width = 0.95,
+            height = 0.95,
+            horizontal = {
+                preview_width = 0.65,
+                -- prompt_position = "top",
+            },
+        },
         mappings = {
             n = {
                 ["q"] = actions.close,
@@ -66,11 +66,12 @@ local opts = { noremap = true, silent = true }
 keymap("n", "<c-p>", ":Telescope <CR>", opts)
 keymap("n", "<leader>fc", ":Telescope commands<CR>", opts)
 keymap("n", "<leader>fb", ":Telescope buffers<CR>", opts)
+keymap("n", "<leader>fe", ":Telescope diagnostics<CR>", opts)
+keymap("n", "<leader>ff", ":Telescope find_files<CR>", opts)
+keymap("n", "<leader>fg", ":Telescope live_grep<CR>", opts)
 keymap("n", "<leader>fp", ":Telescope projects<CR>", opts)
+keymap("n", "<leader>fq", ":Telescope quickfix<CR>", opts)
 keymap("n", "<leader>fr", ":Telescope oldfiles<CR>", opts)
-keymap("n", "<leader>fg", ":Telescope live_grep<CR>", opts)
-keymap("n", "<leader>ff", ":Telescope find_files<CR>", opts)
-keymap("n", "<leader>fe", ":Telescope diagnostics<CR>", opts)
 keymap("n", "<leader>fu", ":Telescope lsp_references<CR>", opts)
 keymap("n", "<leader>fd", ":Telescope lsp_definitions<CR>", opts)
 keymap("n", "<leader>fi", ":Telescope lsp_implementations<CR>", opts)
diff --git a/nvim/lua/lazyplugins/nvimcmp.lua b/nvim/lua/lazyplugins/nvimcmp.lua
index 73df5b9..f006f19 100644
--- a/nvim/lua/lazyplugins/nvimcmp.lua
+++ b/nvim/lua/lazyplugins/nvimcmp.lua
@@ -39,4 +39,22 @@ return {
             require("config.nvimcmp")
         end,
     },
+    {
+        "https://code.byted.org/chenjiaqi.cposture/codeverse.vim.git",
+        event = { "InsertEnter" },
+        dependencies = {
+            "hrsh7th/nvim-cmp",
+        },
+        init = function()
+            -- 关闭 codeverse 内置 tab 映射
+            vim.g.codeverse_no_map_tab = true
+            -- 关闭 codeverse 内置补全映射
+            vim.g.codeverse_disable_bindings = true
+            -- 关闭 codeverse 内置自动补全
+            vim.g.codeverse_disable_autocompletion = true
+        end,
+        config = function()
+            require("codeverse").setup({})
+        end
+    },
 }
