" <<<<<<<<<<<<<<<<<<<<< base <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
set hidden
set showmatch
set incsearch
set ignorecase

set nocompatible
set backspace=indent,eol,start

set cmdheight=2
set updatetime=300
set scrolloff=5                   " 光标移动到buffer的顶部和底部时保持3行距离
set laststatus=2                  " 启动显示状态行(1),总是显示状态行(2)

set number
set shortmess+=c
set signcolumn=number " no diagnostic

set encoding=utf-8
set fileformat=unix
set termencoding=utf-8

" indent default setting
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2

set foldenable                " 开始折叠
set foldmethod=syntax         " 设置语法折叠
set foldlevelstart=99         " 打开文件是默认不折叠代码

syntax enable
filetype plugin indent on

" base key mapping
colorscheme monokai 

nnoremap ;  :
let mapleader=','
nnoremap <leader>w  <c-w>
nnoremap <leader>tf @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

inoremap <C-e> <C-o>$
inoremap <C-a> <C-o>0
inoremap <expr> <C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
inoremap <expr> <C-k> pumvisible() ? "\<C-p>" : "\<C-k>"
" <<<<<<<<<<<<<<<<<<<<< base end <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


" """"""""""""""""""""" tarbar   """"""""""""""""""""""
let g:tagbar_indent = 1
nmap <leader>tg :TagbarToggle<CR>
" """"""""""""""""""" tarbar end """"""""""""""""""""""

" """"""""""""""""""""" nerdtree """"""""""""""""""""""
let g:NERDTreeWinSize=32
"let g:NERDTreeDirArrows = 1
let g:NERDTreeQuitOnOpen = 0
let NERDTreeIgnore=['\.pyc','\~$','\.swp', '\.o', 'blade-bin', 'build64*']

nnoremap <leader>ts  :NERDTreeToggle<CR>
" """"""""""""""""""""" nerdtree """"""""""""""""""""""


" >>>>>>>>>>>>>>>>>>>>> async run >>>>>>>>>>>>>>>>>>>>>>>>
nnoremap <leader>fcw :AsyncRun grep -rwn <cword> .
autocmd User AsyncRunStart call asyncrun#quickfix_toggle(8, 1)
" <<<<<<<<<<<<<<<<<<<<<< async run end <<<<<<<<<<<<<<<<<<<<


" >>>>>>>>>>>>>>>>>>>>> highlight >>>>>>>>>>>>>>>>>>>>>>>>>
highlight WhitespaceEOL ctermbg=red guibg=red
match WhitespaceEOL /\s\+$/

function RemoveTrailingSpace()
  if &ft != "diff"
    let b:curcol = col(".")
    let b:curline = line(".")
    silent! %s/\s\+$//
    call cursor(b:curline, b:curcol)
  endif
endfunction
autocmd BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif
" >>>>>>>>>>>>>>>>>>>>> highlight end >>>>>>>>>>>>>>>>>>>>

" >>>>>>>>>>>>>>>>>>>>> buffer helper start >>>>>>>>>>>>>>
"command! BufOnly silent! execute "%bd|e#|bd#"
command! BufOnly silent! :call CloseAllBuffersButCurrent()<CR>
function! CloseAllBuffersButCurrent()
  let curr = bufnr("%")
  let last = bufnr("$")

  if curr > 1    | silent! execute "1,".(curr-1)."bd"     | endif
  if curr < last | silent! execute (curr+1).",".last."bd" | endif
endfunction
" >>>>>>>>>>>>>>>>>>>>> buffer helper end >>>>>>>>>>>>>>>>

au BufNewFile,BufRead python
    \ set tabstop=4 |
    \ set expandtab |
    \ set autoindent |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set softtabstop=4

" c++0x lambda expr indent
au Filetype cpp,c,objc
    \ setlocal cindent |
    \ setlocal cinoptions=l1 |
    \ setlocal cinoptions+=:0 |
    \ setlocal cino=l1,j1,(0,ws,Ws |
    \ setlocal expandtab tabstop=2 shiftwidth=2

